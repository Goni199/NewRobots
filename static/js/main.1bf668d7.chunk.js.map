{"version":3,"sources":["Components/Title.jsx","Components/SearchBar.jsx","Components/Card.jsx","Components/Robots.jsx","Components/Scroll.jsx","Containers/ErrorFinder.jsx","Containers/App.js","reportWebVitals.js","index.js"],"names":["Title","className","SearchBar","props","onChange","onInputChange","type","placeholder","Card","alt","src","id","name","email","Robots","helpingFilteredArray","filteredRobots","map","antari","i","Scroll","children","ErrorFinder","state","hasError","error","info","this","setState","React","Component","App","event","searchField","target","value","robots","fetch","then","arrejiJson","json","arreji","catch","console","log","finally","filteredArray","filter","indeksi","toLowerCase","includes","length","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2TAUeA,EARH,WACX,OACC,qBAAKC,UAAU,iBAAf,SACC,oBAAIA,UAAU,QAAd,4BCKYC,G,MARC,SAACC,GAChB,OACC,qBAAKF,UAAU,kBAAf,SACC,uBAAOG,SAAUD,EAAME,cAAeC,KAAK,OAAOC,YAAY,sBCOlDC,G,MAVJ,SAACL,GACX,OACC,sBAAKF,UAAU,gBAAf,UACC,qBAAKQ,IAAI,OAAOC,IAAG,+BAA0BP,EAAMQ,GAAhC,mBACnB,4BAAIR,EAAMS,OACV,4BAAIT,EAAMU,aCMEC,EAXF,SAACX,GACd,IAAMY,EAAqBZ,EAAMa,eAAeC,KAAI,SAACC,EAAOC,GAC3D,OAAO,cAAC,EAAD,CAAcR,GAAIO,EAAOP,GAAIC,KAAMM,EAAON,KAAMC,MAAOK,EAAOL,OAAnDM,MAElB,OACC,8BACEJ,KCEWK,G,MARF,SAACjB,GACb,OACC,qBAAKF,UAAU,cAAf,SACEE,EAAMkB,aCwBKC,E,kDA1Bd,WAAYnB,GAAO,IAAD,8BACjB,cAAMA,IACDoB,MAAM,CACVC,UAAU,GAHM,E,qDAOlB,SAAkBC,EAAMC,GACvBC,KAAKC,SAAS,CAACJ,UAAU,M,oBAG1B,WACC,OAAGG,KAAKJ,MAAMC,SAEZ,4DAIA,8BACEG,KAAKxB,MAAMkB,e,GApBSQ,IAAMC,WCqDjBC,G,wDA9Cb,aAAc,IAAD,8BACX,gBAeF1B,cAAc,SAAC2B,GACb,EAAKJ,SAAS,CAACK,YAAaD,EAAME,OAAOC,SAfzC,EAAKZ,MAAM,CACTa,OAAQ,GACRH,YAAa,IAJJ,E,qDAQb,WAAoB,IAAD,OACjBI,MAAM,8CACLC,MAAK,SAACC,GAAc,OAAOA,EAAWC,UACtCF,MAAK,SAACG,GAAU,EAAKb,SAAS,CAACQ,OAAQK,OACvCC,OAAM,SAACjB,GAASkB,QAAQC,IAAInB,EAAM,mCAClCoB,SAAQ,WAAKF,QAAQC,IAAI,6B,oBAO5B,WAAS,IAAD,OACAE,EAAcnB,KAAKJ,MAAMa,OAAOW,QAAO,SAAC7B,EAAO8B,GACnD,OAAO9B,EAAON,KAAKqC,cAAcC,SAAS,EAAK3B,MAAMU,YAAYgB,kBAEnE,OAA8B,IAA3BtB,KAAKJ,MAAMa,OAAOe,OAEjB,qBAAKlD,UAAU,yBAAf,SACE,2CAKF,sBAAKA,UAAU,YAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,CAAWI,cAAesB,KAAKtB,gBAC/B,cAAC,EAAD,UACE,cAAC,EAAD,UACE,cAAC,EAAD,CAAQW,eAAgB8B,e,GAtCpBjB,IAAMC,YCITsB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBhB,MAAK,YAAkD,IAA/CiB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OAAO,cAAC,IAAMC,WAAP,UAAkB,cAAC,EAAD,MAA0BC,SAASC,eAAe,SAKpFZ,M","file":"static/js/main.1bf668d7.chunk.js","sourcesContent":["import \"./Title.css\";\r\n\r\nconst Title=()=>{\r\n\treturn(\r\n\t\t<div className=\"titleContainer\">\r\n\t\t\t<h1 className=\"title\">ROBOFRIENDS</h1>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Title;","import \"./SearchBar.css\";\r\n\r\nconst SearchBar=(props)=>{\r\n\treturn(\r\n\t\t<div className=\"searchContainer\">\r\n\t\t\t<input onChange={props.onInputChange} type=\"text\" placeholder=\"Search Robots\"/>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default SearchBar;","import \"./Card.css\";\r\n\r\nconst Card=(props)=>{\r\n\treturn(\r\n\t\t<div className=\"cardContainer\">\r\n\t\t\t<img alt=\"foto\" src={`https://robohash.org/${props.id}?size=200x200`}/>\r\n\t\t\t<p>{props.name}</p>\r\n\t\t\t<p>{props.email}</p>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Card;","import Card from \"./Card\";\r\n\r\nconst Robots=(props)=>{\r\nconst helpingFilteredArray=props.filteredRobots.map((antari,i)=>{\r\n\treturn <Card key={i} id={antari.id} name={antari.name} email={antari.email}/>\r\n})\r\n\treturn(\r\n\t\t<div>\r\n\t\t\t{helpingFilteredArray}\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Robots;\r\n","import \"./Scroll.css\";\r\n\r\nconst Scroll=(props)=>{\r\n\treturn(\r\n\t\t<div className=\"scrollMaker\">\r\n\t\t\t{props.children}\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Scroll;","import React from \"react\";\r\n\r\nclass ErrorFinder extends React.Component{\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state={\r\n\t\t\thasError: false\r\n\t\t}\r\n\t}\r\n\r\n\tcomponentDidCatch(error,info){\r\n\t\tthis.setState({hasError: true});\r\n\t}\r\n\r\n\trender(){\r\n\t\tif(this.state.hasError){\r\n\t\t\treturn(\r\n\t\t\t\t<h1>Opsss something went wrong</h1>\r\n\t\t\t);\r\n\t\t}else{\r\n\t\t\treturn(\r\n\t\t\t\t<div>\r\n\t\t\t\t\t{this.props.children}\r\n\t\t\t\t</div>\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport default ErrorFinder;","import React from \"react\";\nimport Title from \"../Components/Title\";\nimport SearchBar from \"../Components/SearchBar\";\nimport Robots from \"../Components/Robots\";\nimport Scroll from \"../Components/Scroll\";\nimport ErrorFinder from \"./ErrorFinder\";\nimport \"./App.css\";\n\nclass App extends React.Component{\n  constructor(){\n    super();\n    this.state={\n      robots: [],\n      searchField: \"\"\n    }\n  }\n\n  componentDidMount(){\n    fetch(\"https://jsonplaceholder.typicode.com/users\")\n    .then((arrejiJson)=>{return arrejiJson.json();})\n    .then((arreji)=>{this.setState({robots: arreji})})\n    .catch((error)=>{console.log(error,\"Uupsss something went wrong!\");})\n    .finally(()=>{console.log(\"Its all set and done\")});\n  }\n\n  onInputChange=(event)=>{\n    this.setState({searchField: event.target.value});\n  }\n\n  render(){\n    const filteredArray=this.state.robots.filter((antari,indeksi)=>{\n      return antari.name.toLowerCase().includes(this.state.searchField.toLowerCase())\n    })\n    if(this.state.robots.length===0){\n      return(\n        <div className=\"container loadingStyle\">\n          <h1>LOADING</h1>\n        </div>\n      );\n    }else{\n      return(\n        <div className=\"container\">\n          <Title/>\n          <SearchBar onInputChange={this.onInputChange}/>\n          <Scroll>\n            <ErrorFinder>\n              <Robots filteredRobots={filteredArray}/>\n            </ErrorFinder>\n          </Scroll>\n        </div>\n      );\n    }\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './Containers/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(<React.StrictMode><App/></React.StrictMode>,document.getElementById('root'));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}